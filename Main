#credits to ali sahin
import tkinter as tk
from tkinter import messagebox

max_entries = 500

class Employee:
    def __init__(self):
        self.name = ''
        self.code = 0
        self.designation = ''
        self.exp = 0
        self.age = 0

num = 0
employees = [Employee() for _ in range(max_entries)]

def insert():
    global num, employees

    if num < max_entries:
        i = num
        num += 1

        employees[i].name = entry_name.get()
        employees[i].code = int(entry_code.get())
        employees[i].designation = entry_designation.get()
        employees[i].exp = int(entry_exp.get())
        employees[i].age = int(entry_age.get())
    else:
        messagebox.showerror("Hata", "Maksimum öğrenci sayısına ulaşıldı")

    show_menu()

def delete_index(i):
    global num, employees

    for j in range(i, num - 1):
        employees[j].name = employees[j + 1].name
        employees[j].code = employees[j + 1].code
        employees[j].designation = employees[j + 1].designation
        employees[j].exp = employees[j + 1].exp
        employees[j].age = employees[j + 1].age

def delete_record():
    global num, employees

    code = int(entry_code.get())

    for i in range(num):
        if employees[i].code == code:
            delete_index(i)
            num -= 1
            break

    show_menu()

def search_record():
    global num, employees

    search_name = entry_name.get().lower()  # Küçük harfe çevirerek arama yapıyoruz

    for i in range(num):
        # İsimle eşleşme kontrolü
        if employees[i].name.lower() == search_name:
            result_label.config(text=f"Ad-Soyad: {employees[i].name}\nTC No.: {employees[i].code}\nTanım: {employees[i].designation}\nDeneyim: {employees[i].exp}\nYaş: {employees[i].age}")
            break
    else:
        result_label.config(text="Kayıt bulunamadı")

def show_menu():
    entry_name.delete(0, tk.END)
    entry_code.delete(0, tk.END)
    entry_designation.delete(0, tk.END)
    entry_exp.delete(0, tk.END)
    entry_age.delete(0, tk.END)

    result_label.config(text="")
    
    frame_menu.pack()

# GUI
root = tk.Tk()
root.title("Mezunlar Platformu")

frame_menu = tk.Frame(root)

label_name = tk.Label(frame_menu, text="İsim-Soyisim:")
label_name.grid(row=0, column=0, padx=10, pady=10)

entry_name = tk.Entry(frame_menu)
entry_name.grid(row=0, column=1, padx=10, pady=10)

label_code = tk.Label(frame_menu, text="TC No.:")
label_code.grid(row=1, column=0, padx=10, pady=10)

entry_code = tk.Entry(frame_menu)
entry_code.grid(row=1, column=1, padx=10, pady=10)

label_designation = tk.Label(frame_menu, text="Tanım:")
label_designation.grid(row=2, column=0, padx=10, pady=10)

entry_designation = tk.Entry(frame_menu)
entry_designation.grid(row=2, column=1, padx=10, pady=10)

label_exp = tk.Label(frame_menu, text="Deneyim:")
label_exp.grid(row=3, column=0, padx=10, pady=10)

entry_exp = tk.Entry(frame_menu)
entry_exp.grid(row=3, column=1, padx=10, pady=10)

label_age = tk.Label(frame_menu, text="Yaş:")
label_age.grid(row=4, column=0, padx=10, pady=10)

entry_age = tk.Entry(frame_menu)
entry_age.grid(row=4, column=1, padx=10, pady=10)

btn_insert = tk.Button(frame_menu, text="Yeni kişi gir", command=insert)
btn_insert.grid(row=5, column=0, columnspan=2, pady=10)

btn_delete = tk.Button(frame_menu, text="Öğrenci sil", command=delete_record)
btn_delete.grid(row=6, column=0, columnspan=2, pady=10)

btn_search = tk.Button(frame_menu, text="Öğrenci ara", command=search_record)
btn_search.grid(row=7, column=0, columnspan=2, pady=10)

result_label = tk.Label(frame_menu, text="")
result_label.grid(row=8, column=0, columnspan=2, pady=10)

show_menu()

root.mainloop()
